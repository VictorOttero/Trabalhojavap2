import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class SistemaCadastroAlunos {

    // Configuração do banco de dados
    private static final String URL = "jdbc:mysql://localhost:3306/Curso_de_Tecnologia";
    private static final String USUARIO = "seu_usuario";
    private static final String SENHA = "sua_senha";

    public static void main(String[] args) {
        Connection connection = null;
        Statement statement = null;

        try {
            // Conexão com o banco de dados
            connection = DriverManager.getConnection(URL, USUARIO, SENHA);
            statement = connection.createStatement();

            // Criação da tabela (opcional)
            String sqlCreateTable = "CREATE TABLE IF NOT EXISTS alunos (id INT PRIMARY KEY AUTO_INCREMENT, nome VARCHAR(50), disciplina VARCHAR(50), nota DOUBLE)";
            statement.executeUpdate(sqlCreateTable);

            // Operações CRUD

            // Create (Inserir um novo aluno)
            String sqlInsert = "INSERT INTO alunos (nome, disciplina, nota) VALUES ('John Doe', 'Matemática', 9.5)";
            statement.executeUpdate(sqlInsert);

            // Read (Recuperar todos os alunos)
            String sqlSelectAll = "SELECT * FROM alunos";
            ResultSet resultSetAll = statement.executeQuery(sqlSelectAll);

            List<Aluno> alunos = new ArrayList<>();

            while (resultSetAll.next()) {
                int id = resultSetAll.getInt("id");
                String nome = resultSetAll.getString("nome");
                String disciplina = resultSetAll.getString("disciplina");
                double nota = resultSetAll.getDouble("nota");
                Aluno aluno = new Aluno(id, nome, disciplina, nota);
                alunos.add(aluno);
            }

            System.out.println("Todos os alunos:");
            for (Aluno aluno : alunos) {
                System.out.println(aluno);
            }

            // Funcionalidade adicional: Recuperar alunos que passaram em alguma disciplina
            String sqlSelectPassed = "SELECT * FROM alunos WHERE nota >= 6.0";
            ResultSet resultSetPassed = statement.executeQuery(sqlSelectPassed);

            List<Aluno> alunosPassados = new ArrayList<>();

            while (resultSetPassed.next()) {
                int id = resultSetPassed.getInt("id");
                String nome = resultSetPassed.getString("nome");
                String disciplina = resultSetPassed.getString("disciplina");
                double nota = resultSetPassed.getDouble("nota");
                Aluno alunoPassado = new Aluno(id, nome, disciplina, nota);
                alunosPassados.add(alunoPassado);
            }

            System.out.println("Alunos que passaram em alguma disciplina:");
            for (Aluno aluno : alunosPassados) {
                System.out.println(aluno);
            }

            // Update (Atualizar a nota de um aluno)
            String sqlUpdate = "UPDATE alunos SET nota = 8.0 WHERE id = 1";
            statement.executeUpdate(sqlUpdate);

            // Delete (Excluir um aluno)
            String sqlDelete = "DELETE FROM alunos WHERE id = 1";
            statement.executeUpdate(sqlDelete);

        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            // Fechar as conexões e recursos
            try {
                if (statement != null)
                    statement.close();
                if (connection != null)
                    connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    static class Aluno {
        private int id;
        private String nome;
        private String disciplina;
        private double nota;

        public Aluno(int id, String nome, String disciplina, double nota) {
            this.id = id;
            this.nome = nome;
            this.disciplina = disciplina;
            this.nota = nota;
        }

        @Override
        public String toString() {
            return "Aluno [ID: " + id + ", Nome: " + nome + ", Disciplina: " + disciplina + ", Nota: " + nota + "]";
        }
    }
}
